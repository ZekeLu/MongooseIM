{hosts, "[\"localhost\", \"192.168.1.130\"]"}.
{host_config, ""}.
{odbc_server, "{odbc_server, {mysql, \"localhost\", 3306, \"ejabberd\", \"ejabberd\", \"abcdefg\"}}."}.
{odbc_server_type, "{odbc_server_type, odbc}."}.
{auth_ldap, ""}.
{s2s_addr, "%% { {s2s_addr, \"example-host.net\"}, { {127,0,0,1}, 5269 } }."}.
{s2s_default_policy, deny}.
{outgoing_s2s_port, 5269}.
{node_name, "mongooseim@localhost"}.
{ejabberd_c2s_port, 5222}.
{ejabberd_s2s_in_port, 5269}.
{cowboy_port, 5280}.
{cowboy_port_secure, 5285}.
{mod_amp, ""}.
%%{mod_offline, "{mod_offline, [{access_max_user_messages, max_user_offline_messages}]},"}.
%%{mod_privacy, "{mod_privacy, []},"}.
%%{mod_private, "{mod_private, []},"}.
%%{mod_roster, "{mod_roster, []},"}.
%%{mod_vcard, "{mod_vcard, [%{matches, 1},\n"
%%                "%{search, true},\n"
%%                "%{host, directory.@HOST@}\n"
%%                "]},"}.

{mod_last, "{mod_last, [{backend, odbc}]},"}.
{mod_offline, "{mod_offline, [{backend, odbc}]},"}.
{mod_privacy, "{mod_privacy, [{backend, odbc}]},"}.
{mod_private, "{mod_private, [{backend, odbc}]},"}.
{mod_roster, "{mod_roster, [{backend, odbc}]},"}.
{mod_vcard, "{mod_vcard, [{backend, odbc}]},"}.

{sm_backend, "{redis, [{pool_size, 3}, {worker_config, [{host, \"localhost\"}, {port, 6379}]}]}"}.
{auth_method, "odbc"}.
{ext_auth_script, "%%{extauth_program, \"/path/to/authentication/script\"}."}.
{tls_config, "{certfile, \"priv/ssl/fake_server.pem\"}, starttls,"}.
{https_config, "{cert, \"priv/ssl/fake_cert.pem\"}, {key, \"priv/ssl/fake_key.pem\"}, {key_pass, \"\"},"}. %% Applies to Websockets, BOSH and metrics; PEM format
{zlib, "{zlib, 10000},"}. %% Second element of a tuple is inflated data size limit; 0 for no limit
{registration_watchers, "%{registration_watchers, [\"admin@localhost\"]},"}.
{riak_server, "%%{riak_server, [{pool_size, 20}, {address, \"127.0.0.1\"}, {port, 8087}, {riak_pb_socket_opts, []}]}."}.

% These have to be the same to gather all
% (bin/mongooseim - the script - and lager) log files in one place.
{app_config_lager_log_dir, "\"log\""}.
{mongooseim_runner_log_dir, "log"}.
{http_api_endpoint, "{5288, \"127.0.0.1\"}"}.
{http_api_update, 8081}.


%% APNs config
{apns_apple_host, "\"gateway.sandbox.push.apple.com\""}.
{apns_cert_file, "\"kissnapp_apns_dev.pem\""}.
{apns_timeout, "3000"}.
{apns_feedback_host, "\"feedback.sandbox.push.apple.com\""}.
{apns_feedback_timeout, "18000000"}.

%% mms config
{upload_secret, "\"upload_secret\""}.

%% Amazon S3 config
{s3_key, "\"s3_key\""}.
{s3_secret, "\"s3_secret\""}.
{s3_timeout, "2000"}.
{s3_host, "\"s3_host\""}.
{s3_bucket, "\"s3_bucket\""}.
{s3_public_bucket, "\"s3_public_bucket\""}.
